/**
 * Copyright (c) 2009 Mark de Bruijn (kramieb@gmail.com | Dykam)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this file (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * 1) Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 *
 * 2) Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.RACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
package org.openoakleaf.threading;

/**
 * @param #Int The time the thread is allowed to run.
 * @return Returns true if the thread has finished his job and wants to be unscheduled.
 */
typedef ThreadRunnerDelegate = Int -> Bool;
typedef AdjustThreadShareDelegate = ThreadRunnerDelegate -> Int -> Bool;
typedef AddThreadDelegate = ThreadRunnerDelegate -> Int -> AdjustThreadShareDelegate;
typedef RemoveThreadDelegate = ThreadRunnerDelegate -> Bool;
